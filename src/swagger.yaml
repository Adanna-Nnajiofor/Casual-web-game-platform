openapi: 3.0.0
info:
  title: Casual Game Platform API
  version: 1.0.0
  description: API documentation for the casual game platform
servers:
  - url: http://localhost:5000
    description: Local development server
  - url: https://casual-web-game-platform.onrender.com
    description: Production server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
paths:
  /api/auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        "201":
          description: User registered successfully
        "400":
          description: User already exists
  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Login successful
        "400":
          description: Invalid credentials
  /api/games:
    get:
      tags:
        - Games
      summary: Get all games
      responses:
        "200":
          description: List of all games
  /api/games/{slug}:
    get:
      tags:
        - Games
      summary: Get a game by its slug
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The game details
        "404":
          description: Game not found
  /api/sessions:
    post:
      tags:
        - Sessions
      summary: Save a user's session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                gameId:
                  type: string
                score:
                  type: integer
                duration:
                  type: integer
                difficulty:
                  type: string
                completed:
                  type: boolean
      responses:
        "201":
          description: Session saved successfully
        "400":
          description: Invalid request
        "401":
          description: Unauthorized

  /api/user:
    get:
      tags:
        - Users
      summary: Get all users
      responses:
        "200":
          description: List of users

  /api/user/{userId}:
    get:
      tags:
        - Users
      summary: Get a user by ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User found
        "404":
          description: User not found

    put:
      tags:
        - Users
      summary: Update a user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                avatar:
                  type: string
      responses:
        "200":
          description: User updated successfully
        "404":
          description: User not found

    delete:
      tags:
        - Users
      summary: Delete a user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User deleted successfully
        "404":
          description: User not found

  /api/user/{userId}/stats:
    patch:
      tags:
        - Users
      summary: Update user stats
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                totalScore:
                  type: integer
                totalGamesPlayed:
                  type: integer
                achievements:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Stats updated successfully
        "404":
          description: User not found

  /api/user/{userId}/friends:
    post:
      tags:
        - Friends
      summary: Add a friend
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                friendId:
                  type: string
      responses:
        "200":
          description: Friend added successfully
        "404":
          description: User or friend not found
        "400":
          description: Cannot add yourself

  /api/leaderboard/{gameId}:
    get:
      tags:
        - Leaderboard
      summary: Get leaderboard for a game
      parameters:
        - in: path
          name: gameId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Leaderboard data retrieved successfully
        "500":
          description: Failed to fetch leaderboard

  /api/leaderboard:
    post:
      tags:
        - Leaderboard
      summary: Submit score to leaderboard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gameId:
                  type: string
                score:
                  type: integer
      responses:
        "201":
          description: Score submitted successfully
        "401":
          description: Unauthorized
        "404":
          description: Game not found
